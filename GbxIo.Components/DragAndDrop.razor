@using GBX.NET
@using System.IO.Compression

@rendermode InteractiveAuto

@inject IJSRuntime JSRuntime

<div class="area @dropEnter @(clockwise ? "" : "counterclockwise")">
    <div>
        @Text
    </div>
    <div style="font-size: 18px">
        @SubText
    </div>
</div>
<InputFile OnChange="OnChange"
           @ondragenter="DragEnter"
           @ondragleave="DragEnd"
           @ondragend="DragEnd"
           @onmouseout="MouseOut"
           @ondrop="DragEnd" class="files" multiple="true" />

@code {
    private string? dropEnter;
    private bool clockwise = true;

    [Parameter]
    public EventCallback<BinData> OnFile { get; set; }

    [Parameter]
    public string Text { get; set; } = string.Empty;

    [Parameter]
    public string SubText { get; set; } = string.Empty;

    private async Task OnChange(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles(int.MaxValue))
        {
            using var stream = file.OpenReadStream(int.MaxValue);
            var data = new byte[file.Size];
            await stream.ReadAsync(data);
            await OnFile.InvokeAsync(new BinData(file.Name, data));
        }

        await JSRuntime.InvokeVoidAsync("resetFileInput");
    }

    private void DragEnter(DragEventArgs e)
    {
        dropEnter = "drop-enter";
    }

    private void MouseOut()
    {
        dropEnter = null;
    }

    private void DragEnd()
    {
        dropEnter = null;
        clockwise = !clockwise;
    }
}
