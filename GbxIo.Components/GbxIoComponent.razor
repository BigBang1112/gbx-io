@using GBX.NET
@using System.IO.Compression
@using GBX.NET.Exceptions

@inject ToolService ToolService

@rendermode InteractiveAuto

<DragAndDrop Text="@(string.IsNullOrEmpty(Tool) ? TextWhenUnavailable : TextWhenAvailable)"
             SubText="@(string.IsNullOrEmpty(Tool) ? SubTextWhenUnavailable : SubTextWhenAvailable)"
             OnFile="OnFileAsync"></DragAndDrop>
<ToolMenu></ToolMenu>
<TextOutput></TextOutput>

@code {
    private const string TextWhenAvailable = "Drag and Drop";
    private const string SubTextWhenAvailable = "files, or CLICK to select files";

    private const string TextWhenUnavailable = "Select an I/O Tool";
    private const string SubTextWhenUnavailable = "on the left side, then import files";

    [Parameter]
    public string? Tool { get; set; }

    private async Task OnFileAsync(BinData data)
    {
        if (Tool is null)
        {
            return;
        }

        await ToolService.ProcessFileAsync(Tool, data);
    }
}
